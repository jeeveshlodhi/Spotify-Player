{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\spotify-clone\\\\client\\\\src\\\\Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport Player from \"./Player\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"8b945ef10ea24755b83ac50cede405a0\"\n});\nexport default function Dashboard({\n  code\n}) {\n  _s();\n\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [lyrics, setLyrics] = useState(\"\");\n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n    setLyrics(\"\");\n  }\n\n  useEffect(() => {\n    if (!playingTrack) return;\n    axios.get(\"http://localhost:3001/lyrics\", {\n      params: {\n        track: playingTrack.title,\n        artist: playingTrack.artist\n      }\n    }).then(res => {\n      setLyrics(res.data.lyrics);\n    });\n  }, [playingTrack]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: [searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n        track: track,\n        chooseTrack: chooseTrack\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)), searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          whiteSpace: \"pre\"\n        },\n        children: lyrics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"C/xkEiesDpJOEbcaLNXZ/RIs9iE=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/Code/spotify-clone/client/src/Dashboard.jsx"],"names":["useState","useEffect","useAuth","Player","TrackSearchResult","Container","Form","SpotifyWebApi","axios","spotifyApi","clientId","Dashboard","code","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","chooseTrack","track","get","params","title","artist","then","res","data","setAccessToken","cancel","searchTracks","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artists","name","uri","albumUrl","url","e","target","value","overflowY","length","whiteSpace"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport useAuth from \"./useAuth\"\r\nimport Player from \"./Player\"\r\nimport TrackSearchResult from \"./TrackSearchResult\"\r\nimport { Container, Form } from \"react-bootstrap\"\r\nimport SpotifyWebApi from \"spotify-web-api-node\"\r\nimport axios from \"axios\"\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n  clientId: \"8b945ef10ea24755b83ac50cede405a0\",\r\n})\r\n\r\nexport default function Dashboard({ code }) {\r\n  const accessToken = useAuth(code)\r\n  const [search, setSearch] = useState(\"\")\r\n  const [searchResults, setSearchResults] = useState([])\r\n  const [playingTrack, setPlayingTrack] = useState()\r\n  const [lyrics, setLyrics] = useState(\"\")\r\n\r\n  function chooseTrack(track) {\r\n    setPlayingTrack(track)\r\n    setSearch(\"\")\r\n    setLyrics(\"\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!playingTrack) return\r\n\r\n    axios\r\n      .get(\"http://localhost:3001/lyrics\", {\r\n        params: {\r\n          track: playingTrack.title,\r\n          artist: playingTrack.artist,\r\n        },\r\n      })\r\n      .then(res => {\r\n        setLyrics(res.data.lyrics)\r\n      })\r\n  }, [playingTrack])\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return\r\n    spotifyApi.setAccessToken(accessToken)\r\n  }, [accessToken])\r\n\r\n  useEffect(() => {\r\n    if (!search) return setSearchResults([])\r\n    if (!accessToken) return\r\n\r\n    let cancel = false\r\n    spotifyApi.searchTracks(search).then(res => {\r\n      if (cancel) return\r\n      setSearchResults(\r\n        res.body.tracks.items.map(track => {\r\n          const smallestAlbumImage = track.album.images.reduce(\r\n            (smallest, image) => {\r\n              if (image.height < smallest.height) return image\r\n              return smallest\r\n            },\r\n            track.album.images[0]\r\n          )\r\n\r\n          return {\r\n            artist: track.artists[0].name,\r\n            title: track.name,\r\n            uri: track.uri,\r\n            albumUrl: smallestAlbumImage.url,\r\n          }\r\n        })\r\n      )\r\n    })\r\n\r\n    return () => (cancel = true)\r\n  }, [search, accessToken])\r\n\r\n  return (\r\n    <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\r\n      <Form.Control\r\n        type=\"search\"\r\n        placeholder=\"Search Songs/Artists\"\r\n        value={search}\r\n        onChange={e => setSearch(e.target.value)}\r\n      />\r\n      <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\r\n        {searchResults.map(track => (\r\n          <TrackSearchResult\r\n            track={track}\r\n            key={track.uri}\r\n            chooseTrack={chooseTrack}\r\n          />\r\n        ))}\r\n        {searchResults.length === 0 && (\r\n          <div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\r\n            {lyrics}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <Player accessToken={accessToken} trackUri={playingTrack?.uri} />\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}